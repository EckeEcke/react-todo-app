[{"C:\\Users\\eckar\\OneDrive\\Desktop\\UnterlagenHamburgCodingSchool\\react-todo-app\\react-todo-app\\src\\index.js":"1","C:\\Users\\eckar\\OneDrive\\Desktop\\UnterlagenHamburgCodingSchool\\react-todo-app\\react-todo-app\\src\\App.js":"2","C:\\Users\\eckar\\OneDrive\\Desktop\\UnterlagenHamburgCodingSchool\\react-todo-app\\react-todo-app\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":6514,"mtime":1610218533363,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"2i01y2",{"filePath":"11","messages":"12","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\eckar\\OneDrive\\Desktop\\UnterlagenHamburgCodingSchool\\react-todo-app\\react-todo-app\\src\\index.js",[],["16","17"],"C:\\Users\\eckar\\OneDrive\\Desktop\\UnterlagenHamburgCodingSchool\\react-todo-app\\react-todo-app\\src\\App.js",["18","19","20","21","22","23","24","25","26"],"import React, {useState} from \"react\";\nimport './App.css';\n\n\nexport default function App() {\n\n\n\n  const [menuShown, toggleShowMenu] = useState(\"no-show\");\n\n  function showMenu(){\n    if (menuShown == \"no-show\") {\n      toggleShowMenu(\"show-menu\");\n    }\n    \n    if(menuShown == \"show-menu\"){\n      toggleShowMenu(\"no-show\");\n \n    }\n}\n\n\n  const [todos, setAllTodos] = useState([]);\n  const [filter, setFilter] = useState(\"none\");\n  const [text, setInput] = useState(\"\");\n  const [count, setCounter] = useState(0);\n  const [todoID, setID] = useState(0);\n\n\n  function updateInput(event){\n         setInput(event.target.value);\n    }\n\n  const getInput = event => {\n        event.preventDefault();\n        if (text.length>0){\n          addTodo({text: text, status: \"open\", id: todoID});\n          setInput(\"\");\n          setID(todoID+1);\n        }\n    }\n \n  const updateFilter = event => {\n        setFilter(event.target.value);\n  }\n\n\n\n  const addTodo = newTodo => {\n    setAllTodos(todos => [...todos, newTodo]);\n  }\n\n\n\n function removeTodo(event) {\n      const foundIndex = todos.findIndex(todo => todo.id == event.target.id);\n      let listToSplice = [...todos];\n      listToSplice.splice(foundIndex, 1);\n      setAllTodos(listToSplice);\n  }\n\n  function lineText(event){\n    const foundIndex = todos.findIndex(todo => todo.id == event.target.id);\n\n    if(todos[foundIndex].status == \"done\"){\n      todos[foundIndex].status = \"open\";\n      setAllTodos(todos);\n      setCounter(count+1);\n      if(filter==\"none\"){\n        event.target.className = \"open\";\n      }\n\n    } else if(todos[foundIndex].status == \"open\"){\n      todos[foundIndex].status = \"done\";\n      setAllTodos(todos);\n      setCounter(count+1);\n      if(filter==\"none\"){\n        event.target.className = \"done\";\n      }     \n    }\n}\n\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n\n      <nav>\n \n        <button id=\"hamburger\" onClick={showMenu}>\n          <div className=\"line1\"></div>\n          <div className=\"line2\"></div>\n          <div className=\"line3\"></div>\n        </button>\n        <div id=\"burger-menu\" show={menuShown} className={menuShown}>\n          <ul>\n            <li>\n              <a href=\"https://eckeecke.github.io/index.html\">Home</a>\n            </li>\n\n            <li>\n              <a href=\"https://nifty-hopper-c1da01.netlify.app/\" target=\"_blank\">React Travel Blog</a>\n            </li>\n\n            <li>\n              <a href=\"https://eckeecke.github.io/shooter.html\">JS Space Shooter</a>\n            </li>\n \n            <li>\n              <a href=\"https://eckeecke.github.io/pong.html\">JS Pong</a>\n            </li>\n\n            <li>\n              <a href=\"https://eckeecke.github.io/jsdemos.html\">Demos</a>\n            </li>\n          </ul>\n        </div>\n\n      </nav>\n\n\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n      <br></br>\n\n    \n      <center>\n\n        <h1 style={{fontSize:\"24pt\"}}>Todo List</h1>\n\n        <br></br>\n        \n        <form>\n              <input type=\"text\" className=\"todoInput\" value={text} onChange={updateInput} placeholder=\"Enter todo\" maxlength=\"22\"></input>\n              <button className=\"App-button\" onClick={getInput}><b>+</b> Add todo</button>\n              <br></br>\n              \n              <br></br>\n              <label style={{display:\"inline-block\", width:\"244px\", textAlign: \"left\", backgroundColor:\"white\", color:\"black\", padding:\"8px 0\", paddingLeft:\"4px\"}}>Filter by status</label>\n              <select style={{display:\"inline-block\", width: \"100px\", padding:\"7px 8px 8px\", backgroundColor:\"limegreen\", color:\"white\", border:\"none\"}} id=\"filter\" onChange={updateFilter}>\n                <option value=\"none\">all</option>\n                <option value=\"open\">open</option>\n                <option value=\"done\">done</option>\n              </select>\n                \n        </form>\n\n        <br></br>\n\n        \n        {todos.length>0 &&\n      \n\n            <ul style={{padding: \"30px 0\", maxWidth: \"360px\", backgroundColor: \"rgb(255,255,255,0.95)\"}}>\n              \n              {filter === \"none\" && todos.map((todo, index) => {\n                  \n                  return(\n                    <li count={count} key={index} style={{listStyle: \"none\", marginBottom: \"2px\"}}>\n                      <button  className={todo.status} style={{marginLeft:\"30px\", minWidth: \"280px\", borderStyle: \"none\", padding: \"10px\", color: \"white\", boxShadow: \"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\"}} id={todo.id} onClick={lineText}>{todo.text}</button>\n                      <button  style={{borderStyle: \"none\", background: \"none\", height: \"36px\"}} id={todo.id} onClick={removeTodo}>üóëÔ∏è</button>\n                    </li>\n                  )}  \n                  )}\n\n              {filter === \"open\" && todos.filter(todo => todo.status === \"open\").map((openTodo, index) => {\n                  \n                  return(\n                    <li count={count} key={index} style={{listStyle: \"none\", marginBottom: \"2px\"}}>\n                      <button  className={openTodo.status} style={{marginLeft:\"30px\", minWidth: \"280px\", borderStyle: \"none\", padding: \"10px\", color: \"white\", boxShadow: \"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\"}} id={openTodo.id} onClick={lineText}>{openTodo.text}</button>\n                      <button  style={{borderStyle: \"none\", background: \"none\", height: \"36px\"}} id={openTodo.id} onClick={removeTodo}>üóëÔ∏è</button>\n                    </li>\n                  )}  \n                  )}\n\n              {filter === \"done\" && todos.filter(todo => todo.status === \"done\").map((filteredTodo, index) => {\n                  \n                  return(\n                    <li count={count} key={index} style={{listStyle: \"none\", marginBottom: \"2px\"}}>\n                      <button  className={filteredTodo.status} style={{marginLeft:\"30px\", minWidth: \"280px\", borderStyle: \"none\", padding: \"10px\", color: \"white\", boxShadow: \"rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px\"}} id={filteredTodo.id} onClick={lineText}>{filteredTodo.text}</button>\n                      <button  style={{borderStyle: \"none\", background: \"none\", height: \"36px\"}} id={filteredTodo.id} onClick={removeTodo}>üóëÔ∏è</button>\n                    </li>\n                  )}  \n                  )}\n\n        </ul>\n          }\n        \n        </center>\n      </div>\n      \n     \n    \n        \n\n\n    </div>\n  )\n}\n","C:\\Users\\eckar\\OneDrive\\Desktop\\UnterlagenHamburgCodingSchool\\react-todo-app\\react-todo-app\\src\\reportWebVitals.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":12,"column":19,"nodeType":"33","messageId":"34","endLine":12,"endColumn":21},{"ruleId":"31","severity":1,"message":"32","line":16,"column":18,"nodeType":"33","messageId":"34","endLine":16,"endColumn":20},{"ruleId":"31","severity":1,"message":"32","line":56,"column":58,"nodeType":"33","messageId":"34","endLine":56,"endColumn":60},{"ruleId":"31","severity":1,"message":"32","line":63,"column":56,"nodeType":"33","messageId":"34","endLine":63,"endColumn":58},{"ruleId":"31","severity":1,"message":"32","line":65,"column":33,"nodeType":"33","messageId":"34","endLine":65,"endColumn":35},{"ruleId":"31","severity":1,"message":"32","line":69,"column":16,"nodeType":"33","messageId":"34","endLine":69,"endColumn":18},{"ruleId":"31","severity":1,"message":"32","line":73,"column":40,"nodeType":"33","messageId":"34","endLine":73,"endColumn":42},{"ruleId":"31","severity":1,"message":"32","line":77,"column":16,"nodeType":"33","messageId":"34","endLine":77,"endColumn":18},{"ruleId":"35","severity":1,"message":"36","line":104,"column":15,"nodeType":"37","endLine":104,"endColumn":82},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]